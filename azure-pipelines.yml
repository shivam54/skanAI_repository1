parameters:
- name: agentPoolName
  type: object
  default: 'shivamPool'
  values:
  - 'shivamPool'
  - 'otherPool'

- name: apiUrl
  type: object
   default: 'https://jsonplaceholder.typicode.com/todos/1'
  values:
  - 'https://jsonplaceholder.typicode.com/todos/1'
  - 'https://jsonplaceholder.typicode.com/todos/2'
  
- name: webhookUrl_HighSeverity
  type: string
  default: 'https://skan.webhook.office.com/webhookb2/5a9db735-4761-4f98-83f8-db19a32b2519@e59fe82b-71b9-444c-b711-9e110679544b/IncomingWebhook/576140f9f41b4452805ac22c3122cd32/2ee530b1-cb42-4fe4-86fe-862559dc08b6'

- name: webhookUrl_LowSeverity
  type: string
  default: 'https://skan.webhook.office.com/webhookb2/5a9db735-4761-4f98-83f8-db19a32b2519@e59fe82b-71b9-444c-b711-9e110679544b/IncomingWebhook/56024bfa7eed4f6f93795680d158c846/2ee530b1-cb42-4fe4-86fe-862559dc08b6'

trigger:
- main

jobs:
- job: CallingGetApi
  displayName: 'Calling Get API and Displaying the response'
  pool:
    name: ${{ parameters.agentPoolName }}
  steps:
    - bash: |
        jsonResponse=$(curl -s "${{ parameters.apiUrl }}")
        echo "JSON Response: $jsonResponse"
        echo "$jsonResponse" > $(Build.ArtifactStagingDirectory)/response.json
      displayName: 'Call GET Operation and Save Response'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'responseArtifacts'
        publishLocation: 'pipeline'

    - bash: |
        Status=$(if [ "$(Agent.JobStatus)" == "Succeeded" ]; then echo "Success"; else echo "Failed"; fi)
        echo "Job 'CallingGetApi' Status: $Status"
        echo "Agent Pool Name: ${{ parameters.agentPoolName }}"
        echo "API URL:"
        echo "${{ parameters.apiUrl }}"
        curl -X POST -H "Content-Type: application/json" -d '{
          "text": "Job 'CallingGetApi' Status: '"$Status"'... Agent Pool Name: ${{ parameters.agentPoolName }} AND API URL is : ${{ parameters.apiUrl }}"
        }' ${{ parameters.webhookUrl_HighSeverity }}
      displayName: 'Print Job Status and Send Team Notification - CallingGetApi'

- job: ManipulatingResponse
  displayName: 'Manipulating Response - Appending Timestamp and keyword "shivamData" '
  dependsOn: CallingGetApi
  pool:
    name: ${{ parameters.agentPoolName }}
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Artifact'
      inputs:
        artifact: 'responseArtifacts'
        path: $(Build.ArtifactStagingDirectory)

    - task: CopyFiles@2
      displayName: 'Copy Python Script to Staging Directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'manipulate_json.py'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - bash: |
        ls -R $(Build.ArtifactStagingDirectory)
      displayName: 'List Contents of Staging Directory'

    - bash: |
        cat $(Build.ArtifactStagingDirectory)/response.json
      displayName: 'Print Content of response.json'

    - bash: |
        /usr/bin/python3 $(Build.ArtifactStagingDirectory)/manipulate_json.py
      displayName: 'Run Python Script'

    - bash: |
        Status=$(if [ "$(Agent.JobStatus)" == "Succeeded" ]; then echo "Success"; else echo "Failed"; fi)
        echo "Job 'ManipulatingResponse' Status: $Status"
        echo "Agent Pool Name: ${{ parameters.agentPoolName }}"
        echo "API URL:"
        echo "${{ parameters.apiUrl }}"
        curl -X POST -H "Content-Type: application/json" -d '{
          "text": "Job 'ManipulatingResponse' Status: '"$Status"'... Agent Pool Name: ${{ parameters.agentPoolName }} AND API URL is : ${{ parameters.apiUrl }}"
        }' ${{ parameters.webhookUrl_LowSeverity }}
      displayName: 'Print Job Status and Send Team Notification - ManipulatingResponse'
